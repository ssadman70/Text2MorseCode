/*  Author: Sadman Sakib

    A program that takes text from the Arduino IDE command line, 
    and converts it into morse code, which is played on a 
    piezzo-electric buzzer.
    
    Cane be modified to display morse code on an LED */

int ledPin = 6;
int freq = 6000;

char* letters[] = {
".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..",      // A-I
".---", "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.",    // J-R
"...", "-", "..-", "...-", ".--", "-..-", "-.--", "--.."            // S-Z
};

char* numbers[] = {"-----", ".----", "..---", "...--", "....-", ".....", "-....",
"--...", "---..", "----."};                                         // 0-9

int dotDelay = 100;

void setup() {
  pinMode(ledPin, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  char ch;
  if (Serial.available()) { //is there anything to read from USB?
    ch = Serial.read();  //read a single charecter
    
    if (ch >= 'a' && ch <= 'z'){
      flashSequence(letters[ch - 'a']);
    }  
    
    else if (ch >= 'A' && ch <= 'Z'){
      flashSequence(letters[ch - 'A']);
    }
    
    else if (ch >= '0' && ch <= '9'){
      flashSequence(numbers[ch - '0']);
    }  
    
    else if (ch == ' '){
      delay(dotDelay * 4);   //gap between words
    }  
  }
}

void flashSequence (char* sequence) {
  int i = 0;
  while (sequence[i] != NULL){
    flashDotOrDash(sequence[i]);
    i++;
  }
  delay(dotDelay * 3);  //gap between letters  
}  

void flashDotOrDash (char dotOrDash) {
  tone(ledPin, freq);
  if (dotOrDash == '.') {
    delay(dotDelay);
  }
  else{   //if char is a '-'
    delay(dotDelay * 3);
  }  
  noTone(ledPin);
  delay(dotDelay); //gap between individual flashes
}
